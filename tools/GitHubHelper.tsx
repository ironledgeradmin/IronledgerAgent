import React, { useState } from 'react';
import { GitHubIntegration } from '../components/GitHubIntegration';
import { githubService, type GitHubRepo } from '../src/utils/githubService';
import { aiService } from '../src/utils/aiService';

export const GitHubHelper: React.FC = () => {
  const [selectedRepo, setSelectedRepo] = useState<GitHubRepo | null>(null);
  const [selectedFiles, setSelectedFiles] = useState<string[]>([]);
  const [analysisResult, setAnalysisResult] = useState<string>('');
  const [isAnalyzing, setIsAnalyzing] = useState(false);

  const handleRepoSelected = (repo: GitHubRepo, structure: any) => {
    setSelectedRepo(repo);
    setAnalysisResult('');
  };

  const handleFilesSelected = (files: string[]) => {
    setSelectedFiles(files);
  };

  const analyzeRepository = async () => {
    if (!selectedRepo) return;

    setIsAnalyzing(true);
    try {
      const prompt = `Analyze the GitHub repository ${selectedRepo.owner}/${selectedRepo.name} and provide improvement suggestions. Focus on code quality, security, performance, and modern best practices.`;
      
      const result = await aiService.generateContent(prompt);
      setAnalysisResult(result);
    } catch (error) {
      console.error('Analysis failed:', error);
      setAnalysisResult('Analysis failed. Please check your AI configuration.');
    } finally {
      setIsAnalyzing(false);
    }
  };

  const createSimulatedPR = () => {
    if (!selectedRepo) return;
    
    const prUrl = `${selectedRepo.url}/compare/main...ai-improvements-${Date.now()}`;
    const prDescription = `AI-Generated Improvements for ${selectedRepo.name}

This pull request contains AI-generated improvements and suggestions for the repository.

**Files Analyzed:** ${selectedFiles.length > 0 ? selectedFiles.length : 'All repository files'}

**Improvements Include:**
- Code quality enhancements
- Security improvements
- Performance optimizations
- Modern best practices implementation
- Documentation updates

**Analysis Results:**
${analysisResult || 'Analysis in progress...'}

Generated by IRONLEDGER Full-Stack Assistant
`;

    // Create a GitHub issue/PR template
    const githubUrl = `${selectedRepo.url}/issues/new?title=AI-Generated%20Improvements&body=${encodeURIComponent(prDescription)}`;
    
    window.open(githubUrl, '_blank');
  };

  return (
    <div className="max-w-4xl mx-auto p-6">
      <div className="mb-6">
        <h2 className="text-2xl font-bold text-white mb-2">GitHub Integration Helper</h2>
        <p className="text-gray-400">Connect to your GitHub repository for AI-powered analysis and improvements</p>
      </div>

      <div className="space-y-6">
        <GitHubIntegration 
          onRepoSelected={handleRepoSelected}
          onFilesSelected={handleFilesSelected}
        />

        {selectedRepo && (
          <div className="space-y-4">
            <div className="flex items-center justify-between">
              <h3 className="text-lg font-semibold text-white">Repository Analysis</h3>
              <button
                onClick={analyzeRepository}
                disabled={isAnalyzing}
                className="bg-indigo-600 hover:bg-indigo-700 disabled:bg-gray-600 text-white font-medium py-2 px-4 rounded-lg"
              >
                {isAnalyzing ? 'Analyzing...' : 'üß† Analyze Repository'}
              </button>
            </div>

            {analysisResult && (
              <div className="bg-gray-800 border border-gray-600 rounded-lg p-4">
                <h4 className="text-white font-medium mb-2">AI Analysis Results:</h4>
                <pre className="text-sm text-gray-300 whitespace-pre-wrap">{analysisResult}</pre>
              </div>
            )}

            {analysisResult && (
              <div className="flex gap-4">
                <button
                  onClick={createSimulatedPR}
                  className="bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded-lg"
                >
                  üìù Create GitHub Issue with Suggestions
                </button>
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  );
};
